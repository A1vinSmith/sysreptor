from django.test import TestCase


# TODO: test cases:
# * update report + finding fields (add, delete, change type, label/default) => ensure related projects (report, findings) and report_preview_data are updated
# * add/delete fields => ensure report_section and finding_field_order are updated
# * change type of field => ensure old value deleted + default/none value used
# * add field; set data; delete field; data still in DB but not in fields representation; add field again; old data still there model + representation
# * add predefined filed; set data; try to change structure of predefined field => should fail
# * do NOT add predefined field; try to add a field whose name is the same as predefined field but with different structure => should fail
# * add predefined object field; set data; add property to predefined object field => should succeed
# * custom_finding_field_definitions for finding templates: conflicting custom fields in different project types
# * project_type custom_field: string; create template with custom_field; change data type of project_type.custom_field => what happens with the template?
# * change project_type.report_sections: changes should be synced to ReportSection DB objects
#     * move field to another section; field should have old value
#     * add section
#     * delete section
#     * delete section; add section again; section fields should have old value
# * locking/unlocking: test for race conditions
# * locking/unlocking: test API update+delete blocking for locked objects; test successfull update without prior locking if API object was not locked
# * rendering test cases
#     * test rendering custom components: compare to expected HTML, no rendering errors
#     * test formatDate with different languages/locales
#     * test PDF encryption
# * create project: project, report and all sections created
# * test check_definitions_compatible: definitions have no overlapping fields, overlapping fields of same type, overlapping enum with different values, overlapping fields: list vs string
# * test copy ProjectType and PentestProject: all data, assets, images, sections, findings, etc. exist for the old object and the new one and have the same value