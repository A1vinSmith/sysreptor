from rest_framework import permissions, authentication

from reportcreator_api.users.models import PentestUser


class SendBeaconAuthentication(authentication.BaseAuthentication):
    """
    Workaround such that the unlock API endpoint in LockMixin.unlock works with sendbeacon.
    SendBeacon does not support supplying headers (including Authorization header).
    Fake authentication by getting user via ID such that this view works correctly.
    """
    
    def authenticate(self, request):
        if request.content_type and request.content_type.split(';')[0] == 'text/plain' and request.stream:
            try:
                user = PentestUser.objects.get(id=request.stream.read().decode())
                return user, None
            except (ValueError, TypeError, PentestUser.DoesNotExist):
                pass
        
        return None


class IsAuthenticatedOrRetrieve(permissions.IsAuthenticated):
    def has_permission(self, request, view):
        if view.action and view.action.startswith('retrieve'):
          return True
        return super().has_permission(request, view)


class IsDesignerOrReadOnly(permissions.BasePermission):
    def has_permission(self, request, view):
        return request.method in permissions.SAFE_METHODS or view.action in ['preview'] or \
               request.user.is_superuser or request.user.is_designer


class IsTemplateEditorOrReadOnly(permissions.BasePermission):
    def has_permission(self, request, view):
        return request.method in permissions.SAFE_METHODS or request.user.is_superuser or request.user.is_template_editor


class ProjectReadOnlyPermissions(permissions.BasePermission):
    def has_object_permission(self, request, view, obj):
        if request.method in permissions.SAFE_METHODS or view.action in ['check', 'preview', 'generate', 'copy', 'export', 'readonly']:
            return True
        return not obj.readonly

class ProjectSubresourceReadonlyPermissions(permissions.BasePermission):
    def has_permission(self, request, view):
        if request.method in permissions.SAFE_METHODS:
            return True
        return not view.get_project().readonly

