version: '3.9'
name: sysreptor-dev

services:
  db:
    image: 'postgres:14'
    environment:
      POSTGRES_USER: reportcreator
      POSTGRES_PASSWORD: reportcreator
      POSTGRES_DB: reportcreator
      PGDATA: /data
    volumes:
      - type: volume
        source: db-data
        target: /data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reportcreator"]
      interval: 2s
      timeout: 5s
      retries: 30
    stop_grace_period: 120s
  rabbitmq:
    image: rabbitmq:3
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: reportcreator
      RABBITMQ_DEFAULT_PASS: reportcreator
    volumes:
      - type: volume
        source: mq-data
        target: /var/lib/rabbitmq
    expose:
      - 5672
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity"]
      interval: 2s
      timeout: 5s
      retries: 30
  pdfviewer-builder:
    build: 
      context: ..
      target: pdfviewer-dev
    command: npm run build-watch
    volumes:
      - type: bind
        source: ../packages/pdfviewer/
        target: /app/packages/pdfviewer/
  rendering-builder:
    build: 
      context: ..
      target: rendering-dev
    command: npm run build-watch
    volumes:
      - type: bind
        source: ../rendering/
        target: /app/rendering/
      - type: bind
        source: ../packages/
        target: /app/packages/
  rendering-worker:
    build:
      context: ..
      target: api-dev
    user: "1000"
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery --app=reportcreator_api.conf.celery --quiet worker -Q rendering --without-heartbeat --without-gossip --without-mingle 
    environment:
      PDF_RENDER_SCRIPT_PATH: /app/rendering/dist/bundle.js
      CELERY_BROKER_URL: amqp://reportcreator:reportcreator@rabbitmq:5672/
      CELERY_RESULT_BACKEND: reportcreator_api.tasks.rendering.celery_worker:CustomRPCBackend://reportcreator:reportcreator@rabbitmq:5672/
      CELERY_SECURE_WORKER: "on"
    volumes:
      - type: bind
        source: ../api/src/
        target: /app/api/
      - type: bind
        source: ../rendering/dist
        target: /app/rendering/dist/
    depends_on:
      rabbitmq:
        condition: service_healthy
      rendering-builder:
        condition: service_started
  languagetool:
    build: 
      context: ../languagetool
    init: true
    environment:
      languagetool_dbHost: db
      languagetool_dbName: reportcreator
      languagetool_dbUsername: reportcreator
      languagetool_dbPassword: reportcreator
    expose:
      - 8010
    healthcheck:
      test: ["CMD", "curl", "-f", "-so", "/dev/null", "http://localhost:8010/v2/languages"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      db: 
        condition: service_healthy
  api:
    build:
      context: ..
      target: api-dev
    command: sh -c "python3 manage.py migrate && python3 -m debugpy --listen 0.0.0.0:5678 -m uvicorn --reload --host 0.0.0.0 --port 8000 reportcreator_api.conf.asgi:application"
    init: true
    volumes:
      - type: volume
        source: app-data
        target: /data
      - type: bind
        source: ../api/src/
        target: /app/api/
      - type: bind
        source: ../rendering/dist
        target: /app/rendering/dist/
    expose:
      - 8000
    ports:
      - "8000:8000"
      - "5678:5678"
    environment:
      DEBUG: "on"
      DATABASE_ENGINE: django.db.backends.postgresql
      DATABASE_HOST: db
      DATABASE_NAME: reportcreator
      DATABASE_USER: reportcreator
      DATABASE_PASSWORD: reportcreator
      SPELLCHECK_URL: http://languagetool:8010/
      MEDIA_ROOT: /data/
      ENCRYPTION_KEYS: '[{"id": "local-dev-key", "key": "t02ZBxs4cl6xi7aSO46PVhUbEUNcRjIeyr0eF/OUQOg=", "cipher": "AES-GCM"}]'
      DEFAULT_ENCRYPTION_KEY_ID: local-dev-key
      CELERY_BROKER_URL: amqp://reportcreator:reportcreator@rabbitmq:5672/
      CELERY_RESULT_BACKEND: reportcreator_api.tasks.rendering.celery_worker:CustomRPCBackend://reportcreator:reportcreator@rabbitmq:5672/
      MFA_FIDO2_RP_ID: localhost
    env_file: app.env
    depends_on:
      db:
        condition: service_healthy
      rendering-worker:
        condition: service_started
      languagetool:
        condition: service_started
  frontend:
    build: 
      context: ..
      target: frontend-dev
    command: npm run dev
    volumes:
      - type: bind
        source: ../frontend/
        target: /app/frontend/
      - type: bind
        source: ../packages/
        target: /app/packages/
      - type: bind
        source: ../packages/pdfviewer/dist/
        target: /app/frontend/static/static/pdfviewer/
    expose:
      - 3000
    ports:
      - "3000:3000"
    environment:
      HOST: 0.0.0.0
    depends_on:
      api:
        condition: service_started
      pdfviewer-builder:
        condition: service_started
      
    


volumes:
  db-data:
    name: reportcreator-db-data
  mq-data:
    name: reportcreator-mq-data
  app-data:
    name: reportcreator-app-data

